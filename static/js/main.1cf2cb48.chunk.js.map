{"version":3,"sources":["components/DestinationPanel.tsx","components/Form.tsx","App.tsx","index.tsx"],"names":["DestinationPanel","destination","useState","data","setData","searchingRoute","setSearchingRoute","useEffect","fetchData","a","fetch","response","json","src","route","dataToSearch","isRouteSearching","key","push","reverse","className","map","index","countryOptions","Form","setDestination","destinationValue","setDestinationValue","isBadValue","setIsBadValue","onSubmit","e","preventDefault","includes","htmlFor","type","id","value","onChange","target","toUpperCase","join","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAuDeA,EAjDU,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,YACzB,EAAwBC,mBAAS,CAAC,IAAO,GAAI,GAAM,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,KAA3I,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4CF,mBAAS,CAAC,KAAtD,mBAAOG,EAAP,KAAuBC,EAAvB,KAmCA,OAjCAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,aADb,cACVC,EADU,gBAEGA,EAASC,OAFZ,OAEVT,EAFU,OAGhBC,EAAQD,EAAKA,MAHG,2CAAH,qDAKfK,MACC,IAEHD,qBAAU,WACR,GAAGN,EAAa,CAMd,IALA,IAAIY,EAAcZ,EACda,EAAuB,GACvBC,EAA0CZ,EAC1Ca,GAA4B,EAE1BA,GAIJ,IAAI,IAAIC,IAHG,OAARJ,IACDG,GAAmB,GAEND,EACb,GAAGE,IAAQJ,EAAK,CACdC,EAAMI,KAAKL,GACXA,EAAME,EAAaE,GACnB,MAINX,EAAkBQ,EAAMK,cAEzB,CAAClB,EAAaE,IAIf,qCACE,qBAAIiB,UAAU,eAAd,8BAA+CnB,GAA4B,SAC3E,oBAAImB,UAAU,gBAAd,SACEf,EAAe,IAAMA,EAAegB,KAAI,SAACP,EAAOQ,GAAR,OACtC,6BAAiBR,GAARQ,YC1CbC,EAAgC,CAAC,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAgCtFC,EA9BF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,eACb,EAAgDvB,mBAAS,IAAzD,mBAAOwB,EAAP,KAAyBC,EAAzB,KACA,EAAoCzB,oBAAS,GAA7C,mBAAO0B,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAbiB,SAACC,GACxBA,EAAEC,iBACCT,EAAeU,SAASP,IACzBG,GAAc,GACdJ,EAAeC,GACfC,EAAoB,MAEpBE,GAAc,GACdF,EAAoB,MAKtB,SACE,wBAAOO,QAAQ,cAAf,iCAEE,uBAAOC,KAAK,OAAOC,GAAG,cAAcC,MAAOX,EAAkBY,SAlBnC,SAACP,GAAD,OAA4CJ,EAAoBI,EAAEQ,OAAOF,MAAMG,kBAmBxGZ,GAAc,oBAAGR,UAAU,aAAb,0EAAoEG,EAAekB,KAAK,SACvG,wBAAQrB,UAAU,cAAce,KAAK,SAArC,6B,MCdOO,MAXf,WACE,MAAsCxC,mBAAS,IAA/C,mBAAOD,EAAP,KAAoBwB,EAApB,KAEA,OACE,sBAAKL,UAAU,UAAf,UACE,cAAC,EAAD,CAAMK,eAAgBA,IACtB,cAAC,EAAD,CAAkBxB,YAAaA,QCPrC0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1cf2cb48.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ntype DestinationPanelProps = {\r\n  destination: string,\r\n}\r\n\r\nconst DestinationPanel = ({destination}: DestinationPanelProps) => {\r\n  const [data, setData] = useState({\"CAN\": '', \"US\": '', \"MEX\": '', \"BLZ\": '', \"GTM\": '', \"SLV\": '', \"HND\": '', \"NIC\": '', \"CRI\": '', \"PAN\": ''});\r\n  const [searchingRoute, setSearchingRoute] = useState(['']);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch('data.json');\r\n      const data = await response.json();\r\n      setData(data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(destination) {\r\n      let src: string = destination;\r\n      let route: Array<string> = [];\r\n      let dataToSearch: { [key: string] : string} = data;\r\n      let isRouteSearching: boolean = true;\r\n      \r\n      while(isRouteSearching) {\r\n        if(src === 'US') {\r\n          isRouteSearching = false;\r\n        }\r\n        for(let key in dataToSearch) {\r\n          if(key === src) {\r\n            route.push(src);\r\n            src = dataToSearch[key];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      setSearchingRoute(route.reverse());\r\n    }\r\n  }, [destination, data]);\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <h1 className=\"panel-header\">Route from US to {destination ? destination : \"...\"}</h1>\r\n      <ul className=\"panel-content\">{\r\n        searchingRoute[0] && searchingRoute.map((route, index) => (\r\n          <li key={index}>{route}</li>\r\n        ))\r\n      }</ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DestinationPanel;","import React, { useState } from \"react\";\r\n\r\ntype FormProps = {\r\n  setDestination: React.Dispatch<React.SetStateAction<string>>,\r\n}\r\n\r\nconst countryOptions: Array<string> = [\"CAN\", \"US\", \"MEX\", \"BLZ\", \"GTM\", \"SLV\", \"HND\", \"NIC\", \"CRI\", \"PAN\"];\r\n\r\nconst Form = ({setDestination}: FormProps) => {\r\n  const [destinationValue, setDestinationValue] = useState(\"\");\r\n  const [isBadValue, setIsBadValue] = useState(false);\r\n\r\n  const handleDestinationChange = (e: React.ChangeEvent<HTMLInputElement>) => setDestinationValue(e.target.value.toUpperCase());\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if(countryOptions.includes(destinationValue)) {\r\n      setIsBadValue(false);\r\n      setDestination(destinationValue);\r\n      setDestinationValue(\"\");\r\n    } else {\r\n      setIsBadValue(true);\r\n      setDestinationValue(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <label htmlFor=\"destination\">\r\n        Enter a destination:\r\n        <input type=\"text\" id=\"destination\" value={destinationValue} onChange={handleDestinationChange}/>\r\n        {isBadValue && <p className=\"form-error\">Wprowadź poprawną opcję! Dostępne opcje: {countryOptions.join(', ')}</p>}\r\n        <button className=\"form-button\" type=\"submit\">Get route</button>\r\n      </label>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;","import { useState } from 'react';\r\n\r\nimport DestinationPanel from './components/DestinationPanel';\r\nimport Form from './components/Form';\r\n\r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  const [destination, setDestination] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Form setDestination={setDestination}/>\r\n      <DestinationPanel destination={destination}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}